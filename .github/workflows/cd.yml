name: CD

on:
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at midnight UTC
  workflow_dispatch:

env:
  FORCE_COLOR: 3

permissions: {}

jobs:
  build-extension:
    name: Build the jupyterlite-extension wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - uses: ./.github/build-extension

  build-app:
    name: Build the JupyterLite app
    needs: build-extension
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - uses: ./.github/build-app
        with:
          mode: prod

  release:
    name: Package and upload to GitHub Release
    runs-on: ubuntu-latest
    needs: build-app
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      # Required to upload artifacts to a GitHub release identifier
      contents: write
      # For GHA Attestations
      id-token: write
      attestations: write
    steps:
      - name: Download the built app
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: lite-app-prod
          path: dist/

      - name: Create archive of JupyterLite app
        run: tar -czf jupyterlite-app-release.tar.gz dist/

      - name: Move everything into a single directory for attestation and publication
        run: |
          mkdir upload
          mv dist/ upload/
          mv jupyterlite-app-release.tar.gz upload/

      - name: Generate artifact attestations
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
        with:
          subject-path: "upload/*"

      - name: Verify artifact attestations
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        shell: bash
        run: |
          for artifact in upload/*; do
              echo "# ${artifact}"
              gh attestation verify "${artifact}" --repo $GH_REPO
          done

      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@51cfd90a6d81cfe329568f851fe2236ab4416d17 # v2.2.0
        if: github.event_name == 'release' && github.event.action == 'published'
        with:
          files: upload/*
